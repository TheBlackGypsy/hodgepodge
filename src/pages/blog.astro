---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BlogCard from '../components/BlogCard.astro';
import { blogPosts, getFeaturedPosts } from '../data/blogPosts.ts';

const featuredPosts = getFeaturedPosts();

// Handle search query
const searchQuery = Astro.url.searchParams.get('search') || '';
const filteredPosts = searchQuery 
  ? blogPosts.filter(post => 
      post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      post.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
      post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))
    )
  : blogPosts;

const allPosts = filteredPosts.sort((a, b) => new Date(b.publishDate).getTime() - new Date(a.publishDate).getTime());

// Group posts by category
const postsByCategory = {
  'Threat Analysis': filteredPosts.filter(post => post.category === 'Threat Analysis'),
  'Defense': filteredPosts.filter(post => post.category === 'Defense'),
  'Tutorials': filteredPosts.filter(post => post.category === 'Tutorials'),
  'Industry News': filteredPosts.filter(post => post.category === 'Industry News')
};

// Get unique categories
const categories = ['All', ...Object.keys(postsByCategory)];

// Blog statistics
const totalPosts = allPosts.length;
const totalReadTime = allPosts.reduce((total, post) => {
  const minutes = parseInt(post.readTime.split(' ')[0]);
  return total + minutes;
}, 0);
const avgReadTime = Math.round(totalReadTime / totalPosts);
---

<Layout title="Blog - CyberSec Insights" description="Explore our comprehensive collection of cybersecurity articles, tutorials, and industry insights covering threats, defense strategies, and best practices.">
  <Header />
  
  <main class="blog-content">
    <div class="container">
      <!-- Blog Header -->
      <div class="blog-header">
        <h1>Cybersecurity Blog</h1>
        <p class="blog-subtitle">
          Expert insights, practical tutorials, and the latest cybersecurity intelligence
        </p>
        
        <!-- Search Results -->
        {searchQuery && (
          <div class="search-results">
            <p>Search results for: <strong>"{searchQuery}"</strong></p>
            <p>{filteredPosts.length} article(s) found</p>
            <button class="clear-search-btn" id="clearSearchBtn">Clear Search</button>
          </div>
        )}
        
        <!-- Blog Stats -->
        <div class="blog-stats">
          <div class="stat-item">
            <span class="stat-number">{totalPosts}</span>
            <span class="stat-label">Articles</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">{Math.round(totalReadTime / 60)}h</span>
            <span class="stat-label">Total Content</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">{avgReadTime}min</span>
            <span class="stat-label">Avg Read Time</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">4</span>
            <span class="stat-label">Categories</span>
          </div>
        </div>
      </div>

      <!-- Featured Articles (only show if no search) -->
      {!searchQuery && (
        <section class="featured-section">
          <h2 class="section-title">Featured Articles</h2>
          <div class="featured-grid">
            {featuredPosts.map(post => (
              <BlogCard {...post} />
            ))}
          </div>
        </section>
      )}

      <!-- Category Filter -->
      <section class="filter-section">
        <h2 class="section-title">Browse by Category</h2>
        <div class="category-filters" id="categoryFilters">
          {categories.map(category => (
            <button 
              class={`filter-btn ${category === 'All' ? 'active' : ''}`}
              data-category={category}
            >
              {category === 'All' ? 'üìã All Articles' : 
               category === 'Threat Analysis' ? 'üö® Threat Analysis' :
               category === 'Defense' ? 'üõ°Ô∏è Defense Strategies' :
               category === 'Tutorials' ? 'üéì Tutorials' :
               'üì∞ Industry News'}
            </button>
          ))}
        </div>
      </section>

      <!-- All Articles -->
      <section class="all-articles">
        <div class="articles-container">
          <!-- All Posts -->
          <div class="articles-grid" data-category="All">
            {allPosts.map(post => (
              <BlogCard {...post} />
            ))}
          </div>

          <!-- Category-specific grids -->
          {Object.entries(postsByCategory).map(([category, posts]) => (
            <div class="articles-grid hidden" data-category={category}>
              {posts.map(post => (
                <BlogCard {...post} />
              ))}
            </div>
          ))}
        </div>
      </section>

      <!-- Newsletter Signup -->
      <section class="newsletter-section">
        <div class="newsletter-card">
          <div class="newsletter-content">
            <h3>Stay Updated with Cybersecurity Insights</h3>
            <p>Get the latest articles, threat intelligence, and security best practices delivered to your inbox.</p>
            <form class="newsletter-form" id="blogNewsletterForm">
              <div class="input-container">
                <input 
                  type="email" 
                  id="blogEmailInput"
                  placeholder="Enter your email address" 
                  required
                  autocomplete="email"
                >
                <div class="input-validation" id="blogEmailValidation"></div>
              </div>
              <button type="submit" class="btn subscribe-btn" id="blogSubscribeBtn">
                <span class="btn-text">Subscribe</span>
                <span class="btn-loading hidden">
                  <span class="spinner"></span>
                  <span>Subscribing...</span>
                </span>
              </button>
            </form>
            <p class="newsletter-note">Join 50,000+ security professionals. No spam, unsubscribe anytime.</p>
            
            <!-- Success/Error Messages -->
            <div class="message-container">
              <div class="success-message hidden" id="blogSuccessMessage">
                <span class="message-icon">‚úÖ</span>
                <span class="message-text">Thank you for subscribing! Check your email for confirmation.</span>
              </div>
              <div class="error-message hidden" id="blogErrorMessage">
                <span class="message-icon">‚ùå</span>
                <span class="message-text">Something went wrong. Please try again.</span>
              </div>
            </div>
          </div>
          <div class="newsletter-icon">üìß</div>
        </div>
      </section>

      <!-- Archive Section -->
      <section class="archive-section">
        <h2 class="section-title">Article Archive</h2>
        <div class="archive-grid">
          <div class="archive-card">
            <h4>Recent Articles</h4>
            <ul>
              {allPosts.slice(0, 5).map(post => (
                <li>
                  <a href={`/posts/${post.slug}`}>{post.title}</a>
                  <span class="archive-date">{post.publishDate}</span>
                </li>
              ))}
            </ul>
          </div>
          
          <div class="archive-card">
            <h4>Popular Categories</h4>
            <div class="category-stats">
              {Object.entries(postsByCategory).map(([category, posts]) => (
                <div class="category-stat">
                  <span class="category-name">{category}</span>
                  <span class="category-count">{posts.length} articles</span>
                </div>
              ))}
            </div>
          </div>
          
          <div class="archive-card">
            <h4>Quick Links</h4>
            <ul class="quick-links">
              <li><a href="/threats">Current Threats</a></li>
              <li><a href="/defense">Defense Strategies</a></li>
              <li><a href="/tutorials">Security Tutorials</a></li>
              <li><a href="/about">About the Author</a></li>
            </ul>
          </div>
        </div>
      </section>
    </div>
  </main>

  <Footer />
</Layout>

<script>
  // Category filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const articleGrids = document.querySelectorAll('.articles-grid');
    const clearSearchBtn = document.getElementById('clearSearchBtn');
    
    // Category filtering
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const category = this.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        // Show/hide article grids with smooth transition
        articleGrids.forEach(grid => {
          const gridCategory = grid.getAttribute('data-category');
          if (gridCategory === category) {
            grid.classList.remove('hidden');
            // Trigger reflow for smooth animation
            grid.offsetHeight;
          } else {
            grid.classList.add('hidden');
          }
        });
      });
    });
    
    // Clear search functionality
    if (clearSearchBtn) {
      clearSearchBtn.addEventListener('click', function() {
        window.location.href = '/blog';
      });
    }
    
    // Enhanced Newsletter form handling
    const blogForm = document.getElementById('blogNewsletterForm');
    const blogEmailInput = document.getElementById('blogEmailInput');
    const blogSubscribeBtn = document.getElementById('blogSubscribeBtn');
    const blogBtnText = blogSubscribeBtn?.querySelector('.btn-text');
    const blogBtnLoading = blogSubscribeBtn?.querySelector('.btn-loading');
    const blogSuccessMessage = document.getElementById('blogSuccessMessage');
    const blogErrorMessage = document.getElementById('blogErrorMessage');
    const blogEmailValidation = document.getElementById('blogEmailValidation');
    
    // Email validation function
    function validateEmail(email) {
      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      return emailRegex.test(email);
    }
    
    // Real-time email validation
    if (blogEmailInput) {
      blogEmailInput.addEventListener('input', function() {
        const email = this.value.trim();
        
        if (email === '') {
          blogEmailValidation.textContent = '';
          blogEmailValidation.className = 'input-validation';
          return;
        }
        
        if (validateEmail(email)) {
          blogEmailValidation.textContent = '‚úì Valid email';
          blogEmailValidation.className = 'input-validation valid';
        } else {
          blogEmailValidation.textContent = '‚úó Invalid email';
          blogEmailValidation.className = 'input-validation invalid';
        }
      });
    }
    
    // Form submission handling
    if (blogForm) {
      blogForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const email = blogEmailInput.value.trim();
        
        // Validate email
        if (!validateEmail(email)) {
          showBlogError('Please enter a valid email address');
          blogEmailInput.focus();
          return;
        }
        
        // Show loading state
        setBlogLoadingState(true);
        hideBlogMessages();
        
        try {
          // Simulate API call
          await simulateSubscription(email);
          
          // Show success message
          showBlogSuccess('Welcome! Check your email for confirmation.');
          
          // Reset form
          blogForm.reset();
          blogEmailValidation.textContent = '';
          blogEmailValidation.className = 'input-validation';
          
        } catch (error) {
          console.error('Subscription error:', error);
          showBlogError('Something went wrong. Please try again.');
        } finally {
          setBlogLoadingState(false);
        }
      });
    }
    
    // Helper functions
    function setBlogLoadingState(loading) {
      if (!blogSubscribeBtn) return;
      
      if (loading) {
        blogSubscribeBtn.disabled = true;
        blogBtnText?.classList.add('hidden');
        blogBtnLoading?.classList.remove('hidden');
        blogSubscribeBtn.style.opacity = '0.8';
      } else {
        blogSubscribeBtn.disabled = false;
        blogBtnText?.classList.remove('hidden');
        blogBtnLoading?.classList.add('hidden');
        blogSubscribeBtn.style.opacity = '1';
      }
    }
    
    function showBlogSuccess(message) {
      if (blogSuccessMessage) {
        const messageText = blogSuccessMessage.querySelector('.message-text');
        if (messageText) messageText.textContent = message;
        blogSuccessMessage.classList.remove('hidden');
        blogErrorMessage?.classList.add('hidden');
        setTimeout(() => blogSuccessMessage.classList.add('hidden'), 5000);
      }
    }
    
    function showBlogError(message) {
      if (blogErrorMessage) {
        const messageText = blogErrorMessage.querySelector('.message-text');
        if (messageText) messageText.textContent = message;
        blogErrorMessage.classList.remove('hidden');
        blogSuccessMessage?.classList.add('hidden');
        setTimeout(() => blogErrorMessage.classList.add('hidden'), 5000);
      }
    }
    
    function hideBlogMessages() {
      blogSuccessMessage?.classList.add('hidden');
      blogErrorMessage?.classList.add('hidden');
    }
    
    // Simulate newsletter subscription
    async function simulateSubscription(email) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          // Simulate 95% success rate
          if (Math.random() > 0.05) {
            resolve({ success: true, email });
          } else {
            reject(new Error('Network error'));
          }
        }, 1500);
      });
    }
  });
</script>

<style>
  .blog-content {
    padding: 2rem 0;
  }

  .blog-header {
    text-align: center;
    margin-bottom: 4rem;
    padding: 3rem 0;
  }

  .blog-header h1 {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .blog-subtitle {
    font-size: 1.25rem;
    color: #94A3B8;
    max-width: 600px;
    margin: 0 auto 2rem;
  }

  .search-results {
    background: linear-gradient(135deg, #3B82F6 0%, #1D4ED8 100%);
    border: 1px solid rgba(59, 130, 246, 0.3);
    border-radius: 0.75rem;
    padding: 1rem;
    margin-bottom: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  }

  .search-results p {
    color: white;
    margin: 0;
    font-weight: 500;
  }

  .clear-search-btn {
    background: rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .clear-search-btn:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  .blog-stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-top: 2rem;
  }

  .stat-item {
    text-align: center;
    background: rgba(30, 41, 59, 0.6);
    padding: 1rem;
    border-radius: 0.75rem;
    border: 1px solid rgba(148, 163, 184, 0.1);
    transition: transform 0.2s ease;
  }

  .stat-item:hover {
    transform: translateY(-2px);
  }

  .stat-number {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #64748B;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .section-title {
    font-size: 2rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 3rem;
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Featured Section */
  .featured-section {
    margin-bottom: 5rem;
  }

  .featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  /* Filter Section */
  .filter-section {
    margin-bottom: 3rem;
  }

  .category-filters {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .filter-btn {
    background: rgba(30, 41, 59, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.2);
    color: #CBD5E1;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    font-weight: 500;
  }

  .filter-btn:hover {
    background: linear-gradient(135deg, #3B82F6 0%, #1D4ED8 100%);
    border-color: rgba(59, 130, 246, 0.3);
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
  }

  .filter-btn.active {
    background: linear-gradient(135deg, #3B82F6 0%, #1D4ED8 100%);
    border-color: #3B82F6;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
  }

  /* Articles Section */
  .all-articles {
    margin-bottom: 5rem;
  }

  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    transition: opacity 0.3s ease;
  }

  .articles-grid.hidden {
    display: none;
  }

  /* Newsletter Section */
  .newsletter-section {
    margin-bottom: 5rem;
  }

  .newsletter-card {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
    border: 1px solid rgba(16, 185, 129, 0.3);
    border-radius: 1rem;
    padding: 3rem;
    display: flex;
    align-items: center;
    gap: 2rem;
    backdrop-filter: blur(10px);
  }

  .newsletter-content {
    flex: 1;
  }

  .newsletter-content h3 {
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .newsletter-content p {
    color: #94A3B8;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .newsletter-form {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .input-container {
    flex: 1;
    position: relative;
  }

  .newsletter-form input {
    width: 100%;
    background: rgba(30, 41, 59, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.2);
    border-radius: 0.5rem;
    padding: 0.75rem 3rem 0.75rem 1rem;
    color: #E2E8F0;
    outline: none;
    transition: all 0.2s ease;
    font-size: 1rem;
  }

  .newsletter-form input:focus {
    border-color: #10B981;
    box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
  }

  .newsletter-form input:invalid:not(:placeholder-shown) {
    border-color: #EF4444;
  }

  .newsletter-form input::placeholder {
    color: #64748B;
  }

  .input-validation {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.75rem;
    font-weight: 600;
    transition: all 0.2s ease;
  }

  .input-validation.valid {
    color: #10B981;
  }

  .input-validation.invalid {
    color: #EF4444;
  }

  .subscribe-btn {
    position: relative;
    min-width: 140px;
    transition: all 0.2s ease;
    background: linear-gradient(135deg, #10B981 0%, #059669 100%);
    box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
  }

  .subscribe-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
  }

  .subscribe-btn:disabled {
    cursor: not-allowed;
    transform: none !important;
  }

  .btn-loading {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .spinner {
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  .hidden {
    display: none;
  }

  .newsletter-note {
    color: #64748B;
    font-size: 0.875rem;
    margin: 0;
  }

  .message-container {
    margin-top: 1rem;
  }

  .success-message,
  .error-message {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    animation: slideIn 0.3s ease;
  }

  .success-message {
    background: rgba(16, 185, 129, 0.1);
    border: 1px solid rgba(16, 185, 129, 0.3);
    color: #10B981;
  }

  .error-message {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    color: #EF4444;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .newsletter-icon {
    font-size: 4rem;
    filter: drop-shadow(0 0 20px #10B981);
  }

  /* Archive Section */
  .archive-section {
    margin-bottom: 3rem;
  }

  .archive-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .archive-card {
    background: rgba(30, 41, 59, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.1);
    border-radius: 0.75rem;
    padding: 2rem;
    backdrop-filter: blur(10px);
  }

  .archive-card h4 {
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 1rem;
    font-size: 1.1rem;
  }

  .archive-card ul {
    list-style: none;
    padding: 0;
  }

  .archive-card li {
    margin-bottom: 0.75rem;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
  }

  .archive-card a {
    color: #CBD5E1;
    text-decoration: none;
    transition: color 0.2s ease;
    flex: 1;
    font-size: 0.9rem;
    line-height: 1.4;
  }

  .archive-card a:hover {
    color: #10B981;
  }

  .archive-date {
    color: #64748B;
    font-size: 0.75rem;
    white-space: nowrap;
    background: rgba(100, 116, 139, 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
  }

  .category-stats {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .category-stat {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    background: rgba(148, 163, 184, 0.05);
    border-radius: 0.25rem;
  }

  .category-name {
    color: #CBD5E1;
    font-size: 0.9rem;
  }

  .category-count {
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .quick-links {
    list-style: none;
    padding: 0;
  }

  .quick-links li {
    margin-bottom: 0.5rem;
  }

  .quick-links a {
    color: #CBD5E1;
    text-decoration: none;
    transition: all 0.2s ease;
    font-size: 0.9rem;
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
  }

  .quick-links a:hover {
    color: #10B981;
    transform: translateX(4px);
    background: rgba(16, 185, 129, 0.1);
  }

  .quick-links a::before {
    content: "‚Üí";
    margin-right: 0.5rem;
    color: #10B981;
  }

  @media (max-width: 768px) {
    .blog-header h1 {
      font-size: 2.5rem;
    }

    .blog-stats {
      flex-direction: column;
      gap: 1.5rem;
    }

    .search-results {
      flex-direction: column;
      text-align: center;
    }

    .featured-grid,
    .articles-grid {
      grid-template-columns: 1fr;
    }

    .category-filters {
      flex-direction: column;
      align-items: center;
    }

    .filter-btn {
      width: 100%;
      max-width: 300px;
    }

    .newsletter-card {
      flex-direction: column;
      text-align: center;
      padding: 2rem;
    }

    .newsletter-form {
      flex-direction: column;
    }

    .subscribe-btn {
      width: 100%;
    }

    .archive-grid {
      grid-template-columns: 1fr;
    }

    .archive-card li {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }

    .newsletter-form input {
      font-size: 16px; /* Prevents zoom on iOS */
    }
  }
</style>