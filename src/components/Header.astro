---
const currentPath = Astro.url.pathname;
---

<header class="header">
  <nav class="nav container">
    <div class="nav-brand">
      <a href="/" class="brand-link">
        <div class="brand-icon">üîí</div>
        <span class="brand-text">CyberSec Insights</span>
      </a>
    </div>
    
    <ul class="nav-menu" id="navMenu">
      <li><a href="/" class={currentPath === '/' ? 'active' : ''}>Home</a></li>
      <li><a href="/blog" class={currentPath === '/blog' ? 'active' : ''}>Blog</a></li>
      <li><a href="/threats" class={currentPath === '/threats' ? 'active' : ''}>Threats</a></li>
      <li><a href="/defense" class={currentPath === '/defense' ? 'active' : ''}>Defense</a></li>
      <li><a href="/tutorials" class={currentPath === '/tutorials' ? 'active' : ''}>Tutorials</a></li>
      <li><a href="/about" class={currentPath === '/about' ? 'active' : ''}>About</a></li>
    </ul>

    <div class="nav-search">
      <form class="search-form" id="headerSearchForm">
        <input type="search" placeholder="Search articles..." class="search-input" id="headerSearchInput" autocomplete="off">
        <button type="submit" class="search-btn" id="headerSearchBtn">üîç</button>
      </form>
      <div class="search-suggestions" id="searchSuggestions"></div>
    </div>

    <button class="mobile-menu-btn" id="mobileMenuBtn">‚ò∞</button>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Sample article data for search suggestions
    const articles = [
      { title: "Advanced Persistent Threats: What to Expect in 2025", slug: "advanced-persistent-threats-2025", category: "Threat Analysis", tags: ["APT", "Threat Intelligence", "Cybersecurity", "AI Security"] },
      { title: "Zero Trust Implementation: A Practical Guide", slug: "zero-trust-implementation-guide", category: "Defense", tags: ["Zero Trust", "Implementation", "Enterprise Security", "IAM"] },
      { title: "Kubernetes Security: Essential Checklist for 2025", slug: "kubernetes-security-checklist", category: "Tutorials", tags: ["Kubernetes", "Container Security", "DevSecOps", "Cloud Security"] },
      { title: "Complete Guide: Installing Ubuntu in Oracle VirtualBox", slug: "ubuntu-virtualbox-installation-guide", category: "Tutorials", tags: ["Ubuntu", "VirtualBox", "Virtualization", "Security Lab", "Linux"] },
      { title: "Emerging AI Security Frameworks: Protecting Machine Learning Systems", slug: "ai-security-frameworks-emerging", category: "Threat Analysis", tags: ["AI Security", "Machine Learning", "Adversarial Attacks", "Privacy"] },
      { title: "Automating Incident Response: SOAR Implementation Guide", slug: "incident-response-automation", category: "Defense", tags: ["SOAR", "Automation", "Incident Response", "Security Operations"] }
    ];

    // Mobile menu functionality
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const navMenu = document.getElementById('navMenu');
    
    if (mobileMenuBtn && navMenu) {
      mobileMenuBtn.addEventListener('click', function() {
        navMenu.classList.toggle('mobile-active');
        this.textContent = navMenu.classList.contains('mobile-active') ? '‚úï' : '‚ò∞';
      });
    }
    
    // Search functionality
    const headerSearchForm = document.getElementById('headerSearchForm');
    const headerSearchInput = document.getElementById('headerSearchInput');
    const searchSuggestions = document.getElementById('searchSuggestions');
    
    function performSearch(query) {
      if (query.trim()) {
        window.location.href = `/blog?search=${encodeURIComponent(query.trim())}`;
      }
    }
    
    function showSuggestions(query) {
      if (!query || query.length < 2) {
        searchSuggestions.style.display = 'none';
        return;
      }
      
      const filteredArticles = articles.filter(article => 
        article.title.toLowerCase().includes(query.toLowerCase()) ||
        article.category.toLowerCase().includes(query.toLowerCase()) ||
        article.tags.some(tag => tag.toLowerCase().includes(query.toLowerCase()))
      ).slice(0, 5);
      
      if (filteredArticles.length === 0) {
        searchSuggestions.style.display = 'none';
        return;
      }
      
      searchSuggestions.innerHTML = filteredArticles.map(article => `
        <div class="suggestion-item" data-slug="${article.slug}">
          <div class="suggestion-title">${article.title}</div>
          <div class="suggestion-meta">
            <span class="suggestion-category">${article.category}</span>
            <span class="suggestion-tags">${article.tags.slice(0, 2).join(', ')}</span>
          </div>
        </div>
      `).join('');
      
      searchSuggestions.style.display = 'block';
      
      // Add click handlers to suggestions
      searchSuggestions.querySelectorAll('.suggestion-item').forEach(item => {
        item.addEventListener('click', function() {
          const slug = this.getAttribute('data-slug');
          window.location.href = `/posts/${slug}`;
        });
      });
    }
    
    if (headerSearchForm && headerSearchInput) {
      headerSearchForm.addEventListener('submit', function(e) {
        e.preventDefault();
        performSearch(headerSearchInput.value);
      });
      
      headerSearchInput.addEventListener('input', function() {
        showSuggestions(this.value);
      });
      
      headerSearchInput.addEventListener('focus', function() {
        if (this.value.length >= 2) {
          showSuggestions(this.value);
        }
      });
      
      // Hide suggestions when clicking outside
      document.addEventListener('click', function(e) {
        if (!e.target.closest('.nav-search')) {
          searchSuggestions.style.display = 'none';
        }
      });
    }
  });
</script>

<style>
  .header {
    background: rgba(15, 23, 42, 0.95);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 0;
  }

  .nav-brand {
    flex-shrink: 0;
  }

  .brand-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: #E2E8F0;
    font-weight: 700;
    font-size: 1.25rem;
  }

  .brand-icon {
    font-size: 1.5rem;
    margin-right: 0.5rem;
    filter: drop-shadow(0 0 10px #10B981);
  }

  .brand-text {
    background: linear-gradient(135deg, #10B981 0%, #3B82F6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .nav-menu {
    display: flex;
    list-style: none;
    gap: 2rem;
    margin: 0;
    padding: 0;
    transition: all 0.3s ease;
  }

  .nav-menu a {
    color: #CBD5E1;
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    position: relative;
  }

  .nav-menu a:hover,
  .nav-menu a.active {
    color: #10B981;
    background: rgba(16, 185, 129, 0.1);
  }

  .nav-search {
    position: relative;
    display: flex;
    align-items: center;
  }

  .search-form {
    display: flex;
    align-items: center;
    background: rgba(30, 41, 59, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.2);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: all 0.2s ease;
  }

  .search-form:focus-within {
    border-color: #10B981;
    box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.1);
  }

  .search-input {
    background: none;
    border: none;
    color: #E2E8F0;
    padding: 0.5rem 1rem;
    outline: none;
    width: 200px;
    font-size: 0.9rem;
  }

  .search-input::placeholder {
    color: #64748B;
  }

  .search-btn {
    background: none;
    border: none;
    color: #64748B;
    padding: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .search-btn:hover {
    color: #10B981;
    background: rgba(16, 185, 129, 0.1);
  }

  .search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: rgba(15, 23, 42, 0.98);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(148, 163, 184, 0.2);
    border-top: none;
    border-radius: 0 0 0.5rem 0.5rem;
    max-height: 300px;
    overflow-y: auto;
    display: none;
    z-index: 1000;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  }

  .suggestion-item {
    padding: 0.75rem 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }

  .suggestion-item:last-child {
    border-bottom: none;
  }

  .suggestion-item:hover {
    background: rgba(16, 185, 129, 0.1);
  }

  .suggestion-title {
    color: #E2E8F0;
    font-weight: 500;
    font-size: 0.9rem;
    margin-bottom: 0.25rem;
    line-height: 1.3;
  }

  .suggestion-meta {
    display: flex;
    gap: 0.5rem;
    font-size: 0.75rem;
  }

  .suggestion-category {
    color: #10B981;
    font-weight: 500;
  }

  .suggestion-tags {
    color: #64748B;
  }

  .mobile-menu-btn {
    display: none;
    background: none;
    border: none;
    color: #E2E8F0;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }

  .mobile-menu-btn:hover {
    background: rgba(16, 185, 129, 0.1);
    color: #10B981;
  }

  @media (max-width: 768px) {
    .nav-search {
      display: none;
    }

    .mobile-menu-btn {
      display: block;
    }

    .nav-menu {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: rgba(15, 23, 42, 0.98);
      backdrop-filter: blur(20px);
      flex-direction: column;
      padding: 1rem;
      gap: 0.5rem;
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    }

    .nav-menu.mobile-active {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    .nav-menu a {
      padding: 0.75rem 1rem;
      border-radius: 0.5rem;
      width: 100%;
      text-align: center;
    }

    .nav {
      padding: 0.75rem 0;
    }

    .brand-text {
      font-size: 1.1rem;
    }
  }
</style>